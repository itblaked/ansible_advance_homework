---

# tasks file for osp.servers
# - name: Create new server instances and attaches them a network and passes metadata to the instance
# - name: Add floating IP to Servers
# - name: Wait for server to be available

- name: Provision Instances
  os_server:
    name: "{{ item.name }}"
    image: "{{ item.image }}"
    key_name: "{{ item.keypair }}"
    meta: "{{ item.metadata }}"
    flavor: "{{ item.flavor }}"
    security_groups: "{{ item.security_groups }}"
    network: "{{ item.int_network }}"
    auto_ip: "no"
    user_data: |
      #!/bin/bash
      curl -o /tmp/openstack.pub http://www.opentlc.com/download/ansible_bootcamp/openstack_keys/openstack.pub
      cat /tmp/openstack.pub >> /home/cloud-user/.ssh/authorized_keys
      curl -o /tmp/internal.repo http://www.opentlc.com/download/ansible_bootcamp/repo/internal.repo
      cp /tmp/internal.repo /etc/yum.repos.d/internal.repo
    timeout: "200"
  loop: "{{ instances }}"
  register: provisioned_instances
  tags: provision

- name: Enable sudo without tty for some ansible commands
  replace:
    path: /etc/sudoers
    regexp: '^Defautls\s*requiretty'
    replace: 'Defaults !requiretty'
    backup: yes

- name: Ensure servers are started
  os_server_action:
    server: "{{ item.name }}"
    action: start
  loop: "{{ instances }}"
  register: server_start
  tags: start_servers

- name: Provision Floating IP's
  os_floating_ip:
    server: "{{ item.name }}"
    network: "{{ item.ext_network }}"
    fixed_address: "{{ provisioned_instances.results[0].openstack.addresses.int_network[0].addr }}"
    wait: "yes"
  loop: "{{ instances }}"
  register: provisioned_fips
  tags: floating_ips

- name: Check if port 22 is available
  wait_for_connection:
  register: instance_connection_state
  tags: instance_ssh_state
